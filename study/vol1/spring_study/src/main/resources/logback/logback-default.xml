<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- console 출력용 로그 패턴에 색상 적용 converter -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>

    <!-- console 출력용 색상을 적용 로그 패턴 -->
    <property name="COLOR_LOG_PATTERN"
              value="[%d{YYYY.MM.dd HHmmss}:%-3relative] %highlight(%-5level) %clr(${PID:-}){magenta} %clr(---){faint} %clr([%15.15thread]){faint} %clr(%-40.40logger{36}){cyan} %clr(:){faint} %msg%n"/>

    <!-- console 출력 (STDOUT) -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${COLOR_LOG_PATTERN}</Pattern>
        </layout>
    </appender>

    <logger name="com.example.spring_study.mvc.repository">
        <level value="ERROR"/>
    </logger>

    <logger name="org.springframework.boot">
        <level value="ERROR"/>
    </logger>
    <logger name="org.springframework.boot.devtools.restart">
        <level value="ERROR"/>
    </logger>
    <logger name="org.springframework">
        <level value="ERROR"/>
    </logger>
    <logger name="springfox">
        <level value="ERROR"/>
    </logger>
    <logger name="org.hibernate">
        <level value="ERROR"/>
    </logger>
    <logger name="org.apache">
        <level value="ERROR"/>
    </logger>
    <logger name="org.apache.http.impl.conn">
        <level value="ERROR"/>
    </logger>

    <logger name="log4jdbc">
        <level value="DEBUG"/>
    </logger>

    <logger name="org.mybatis">
        <level value="WARN"/>
    </logger>

    <logger name="com.zaxxer">
        <level value="ERROR"/>
    </logger>
    <logger name="com.zaxxer.hikari.pool">
        <level value="ERROR"/>
    </logger>

    <!-- Query Loggers -->
    <logger name="jdbc" level="WARN"/>
    <logger name="jdbc.connection" level="WARN"/>
    <!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
    <logger name="jdbc.sqlonly" level="WARN"/>
    <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
    <logger name="jdbc.sqltiming" level="ERROR"/>
    <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
    <logger name="jdbc.resultset" level="OFF"/>
    <logger name="jdbc.resultsettable" level="DEBUG"/>
    <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
    <logger name="jdbc.audit" level="OFF"/>


    <root level="DEBUG">
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>